Rule: 
    $var name = %1;
    $var rule = %3;
    $var data_block = %4;
    $var nested_rules = %5;

    &rule_begin(ID ':') function_body_decl? (#rule)* #data_block #nested_rule* STRICT_END
    data:
        name: name
        rule: rule
        data_block: data_block
        nestedRules: nested_rules 
    ;
    #rule: 
        $bool is_id = matched($3);
        $bool is_nested = matched($3>%1);
        $bool is_cll = !matched($1);
        $var val = is_id ? $3>%2 : ( is_cll ? %1 : $2 );
        $char qualifier = %3;

        (( group | csequence | STRING | accessor | hex | bin | ( '#'? ID ) ) qualifier?) | #escaped | #any | #op | cll | linear_comment

        data: 
            is_id: is_id
            is_nested: is_nested
            is_cll: is_cll
            val: val
            qualifier: qualifier
        ;
    ;
    #op:
        $data = $1;
        ( '|' | '|&' )
    ;
    #qualifier:
        $data = $1;
        ('?' | '+' | '*')
    ;
    #group:
        $var name=$0>%1;
        $var r=%4;

        ('&' method_call | ID )? '(' rule* ')'

        data: 
            variable: name
            val: r
        ;
    ;
    #csequence:     // Character Sequence
        '[' '^'? &dt ( #escape | #symbol | #diapason )* ']'
        data:
            not: matched(%2)
            val: dt
        ;
        #symbol:
            $data = $1;
            ('\\'   |   '\\]' |  [^\]]) 
        ;
        #escape:
            $data = $1;
            // some escape chars like \s, \d
            '\\' \s0 (.)
        ;
        #diapason:
            ( &from (symbol) \s0 '-' \s0 &to (symbol))
            data: [from, to];
        ;
    ;
    #any:
        '.'
    ;
    #data_block:
        [\r\n]+ 'data' ':' &data ( ANY_DATA | #inclosed_map ) ';'
        #inclosed_map:
            &data(key+)
        ;
        #key:
            [\n\r]+ &name(id) ':' &dt (ANY_DATA)
            data:
                name: name
                val: dt
            ;
        ;
    ;
    #escaped:
        '\\' \s0 . \s0 NUMBER?
        data:
            c: %3
            num: %5
        ;
    ;
    #nested_rule: 
        [\r\n]+ '#' \s0 Rule
        data: %4
    ;
    #hex:
        '0x' [1-9A-Fa-f]+
        data: %2;
    #bin:
        '0b' [01]+
        data: %2;
;