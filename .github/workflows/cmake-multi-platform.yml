name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1

      - name: Install Boost and Dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libboost-all-dev gcc build-essential

      - name: Install Boost and Dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          mkdir C:/boost
          cd C:/boost
          git clone <boost_cmake>
          cd boost_cmake
          cmake -B build -S .
          cmake --build
          




      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_PREFIX_PATH=C:/boost_1_87_0
          -DBOOST_ROOT=C:/boost_1_87_0
          -DBOOST_INCLUDEDIR=C:/boost_1_87_0
          -DBOOST_LIBRARYDIR=C:/boost_1_87_0/stage/lib
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        working-directory: build
        run: ctest --build-config ${{ matrix.build_type }}
